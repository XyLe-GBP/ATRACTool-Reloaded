//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATRACTool_Reloaded.Localizable {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ATRACTool_Reloaded.Localizable.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   The file already exists in the specified directory.
        ///If the file is converted in this way, the
        ///specified directory will be lost.
        ///Do you want to continue? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AlreadyExistsCaption {
            get {
                return ResourceManager.GetString("AlreadyExistsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the “Loop from start to end of audio source” or “Set loop point” option is enabled in the settings screen, you cannot configure it here.
        ///To configure it, disable the above option in the ATRAC3/ATRAC3+ and ATRAC9 groups. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT3AT9LoopBeginToEndAlreadyEnabledWarning {
            get {
                return ResourceManager.GetString("AT3AT9LoopBeginToEndAlreadyEnabledWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Adaptive TRansform Acoustic Coding 3 / 3+ (*.at3)|*.at3; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT3Filter {
            get {
                return ResourceManager.GetString("AT3Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the “Loop from start to end of audio source” or “Set loop points” option is enabled in the settings screen, you cannot configure it here.
        ///To configure it, disable the above option in the ATRAC3/ATRAC3+ group. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT3LoopBeginToEndAlreadyEnabledWarning {
            get {
                return ResourceManager.GetString("AT3LoopBeginToEndAlreadyEnabledWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The settings on this screen are for confirmation only and will not be reflected in the actual output.
        ///To output ATRAC3/ATRAC3+ with loops applied, whether for a single file or multiple files, turn off the ‘Loop from start to end of source’ and ‘Set loop points’ settings, and configure the loop directly on this UI.
        ///Alternatively, check ‘Create loop points during conversion’, execute the conversion, and then adjust the settings on the displayed screen to ensure each file loops correctly.
        ///While it is possible  [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT3PreviewWarningCaption {
            get {
                return ResourceManager.GetString("AT3PreviewWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Adaptive TRansform Acoustic Coding 9 (*.at9)|*.at9; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT9Filter {
            get {
                return ResourceManager.GetString("AT9Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the “Loop from start to end of audio source” or “Set loop points” option is enabled in the settings screen, you cannot configure it here.
        ///To configure it, disable the above option in the ATRAC9 group. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT9LoopBeginToEndAlreadyEnabledWarning {
            get {
                return ResourceManager.GetString("AT9LoopBeginToEndAlreadyEnabledWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The settings on this screen are for confirmation only and will not be reflected in the actual output.
        ///To output ATRAC9 with loops applied, whether for a single file or multiple files, turn off the ‘Loop from start to end of source’ and ‘Set loop points’ settings, and configure the loop directly on this UI.
        ///Alternatively, check ‘Create loop points during conversion’, execute the conversion, and then adjust the settings on the displayed screen to ensure each file loops correctly.
        ///While it is possible to enabl [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AT9PreviewWarningCaption {
            get {
                return ResourceManager.GetString("AT9PreviewWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Adaptive TRansform Acoustic Coding 3 / 3+ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ATRAC3FormatCaption {
            get {
                return ResourceManager.GetString("ATRAC3FormatCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Adaptive TRansform Acoustic Coding 9 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ATRAC9FormatCaption {
            get {
                return ResourceManager.GetString("ATRAC9FormatCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the ATRAC playback option is enabled, the &apos;Save to specified folder&apos; option is not available.
        ///The normal method of saving is used. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ATRACPlaybackEnabledSpecLocationWarning {
            get {
                return ResourceManager.GetString("ATRACPlaybackEnabledSpecLocationWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The process has been aborted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CancelledCaption {
            get {
                return ResourceManager.GetString("CancelledCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Audio Coding (*.m4a, *.aac)|*.m4a;*.aac;|Audio Interchange File Format (*.aiff)|*.aiff;|Apple Lossless Audio Codec (*.m4a, *.alac)|*.m4a;*.alac;|Audio Video Interleave (*.avi)|*.avi;|Free Lossless Audio Codec (*.flac)|*.flac;|Google Web Media (*.webm)|*.webm;|MPEG-1 Audio Layer-3 (*.mp3)|*.mp3;|Matroska Video (*.mkv)|*.mkv;|MPEG-4 (*.mp4, *.m4v)|*.mp4;*.m4v;|Windows Media (*.wma, *.wmv)|*.wma;*.wmv;|Opus (*.opus)|*.opus;|QuickTime file format (*.mov)|*.mov|Vorbis (*.ogg)|*.ogg;|RIFF waveform Audio  [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ConverterFilters {
            get {
                return ResourceManager.GetString("ConverterFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to convert audio. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ConvertErrorCaption {
            get {
                return ResourceManager.GetString("ConvertErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Successfully converted audio. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ConvertSuccessCaption {
            get {
                return ResourceManager.GetString("ConvertSuccessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current version: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CurrentCaption {
            get {
                return ResourceManager.GetString("CurrentCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unique splash screen images are reflected when the application is restarted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSplashCaption {
            get {
                return ResourceManager.GetString("CustomSplashCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Image size is incorrect.
        ///Width: 800 or 400px
        ///Height: 480 or 240px
        ///Only files that meet the above criteria can be specified. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CustomSplashSizeErrorCaption {
            get {
                return ResourceManager.GetString("CustomSplashSizeErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to decode the ATRAC file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DecodeErrorCaption {
            get {
                return ResourceManager.GetString("DecodeErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Some ATRAC decoding failed.
        ///Please review the settings in &apos;Conversion Settings&apos;.
        ///Also, please check if the file system of the conversion source is correct. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DecodePartialCaption {
            get {
                return ResourceManager.GetString("DecodePartialCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Successfully decoded the ATRAC file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DecodeSuccessCaption {
            get {
                return ResourceManager.GetString("DecodeSuccessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The download is currently in progress.
        ///If you stop the process, the downloaded content will be lost.
        ///Are you sure you want to stop the process? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DownloadAbortConfirmCaption {
            get {
                return ResourceManager.GetString("DownloadAbortConfirmCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0}% ({1} KiB out of {2} KiB) Download completed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DownloadingCaption {
            get {
                return ResourceManager.GetString("DownloadingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file is downloading.
        ///Please wait a moment... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DownloadStatusCaption {
            get {
                return ResourceManager.GetString("DownloadStatusCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to encode ATRAC file.
        ///Please review the settings in &apos;Conversion Settings&apos;.
        ///Also, please make sure that the file system from which you are converting is correct. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EncodeErrorCaption {
            get {
                return ResourceManager.GetString("EncodeErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You have not selected the correct encoding method.
        ///Please select &apos;ATRAC3 / ATRAC3+&apos;, &apos;ATRAC9&apos; or &apos;Walkman&apos;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EncodemethodErrorCaption {
            get {
                return ResourceManager.GetString("EncodemethodErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Some ATRAC encoding failed.
        ///Please review the settings in &apos;Conversion Settings&apos;.
        ///Also, please check if the file system of the conversion source is correct. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EncodePartialCaption {
            get {
                return ResourceManager.GetString("EncodePartialCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Successfully encoded the ATRAC file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EncodeSuccessCaption {
            get {
                return ResourceManager.GetString("EncodeSuccessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Files with different extensions cannot be loaded at the same time. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileMixedErrorCaption {
            get {
                return ResourceManager.GetString("FileMixedErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ATRAC3 / 3+ and ATRAC9, or ATRAC3 / 3+ and ATRAC9 formats and other formats cannot be loaded simultaneously. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileMixedWithATRACCaption {
            get {
                return ResourceManager.GetString("FileMixedWithATRACCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} KiB ({1} Bytes) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FileSizeCaption {
            get {
                return ResourceManager.GetString("FileSizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file size is too large to load. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FilesizeLargeCaption {
            get {
                return ResourceManager.GetString("FilesizeLargeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Advanced Audio Coding (*.m4a, *.aac)|*.m4a;*.aac;|Audio Interchange File Format (*.aiff)|*.aiff;|Apple Lossless Audio Codec (*.m4a, *.alac)|*.m4a;*.alac;|Free Lossless Audio Codec (*.flac)|*.flac;|MPEG-1 Audio Layer-3 (*.mp3)|*.mp3;|Windows Media Audio (*.wma)|*.wma;|Opus (*.opus)|*.opus;|Vorbis (*.ogg)|*.ogg;|RIFF waveform Audio Format (*.wav)|*.wav;|Adaptive TRansform Acoustic Coding 3 / 3+ (*.at3)|*.at3;|Adaptive TRansform Acoustic Coding 9 (*.at9)|*.at9;|All Supported Files|*.m4a;*.aac;*.aiff;*.alac;*.f [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Filters {
            get {
                return ResourceManager.GetString("Filters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify a folder to save the file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FolderSaveDialogTitle {
            get {
                return ResourceManager.GetString("FolderSaveDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Downloading... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string FormDownloadingCaption {
            get {
                return ResourceManager.GetString("FormDownloadingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initializing... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InitializationCaption {
            get {
                return ResourceManager.GetString("InitializationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Latest version: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LatestCaption {
            get {
                return ResourceManager.GetString("LatestCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Length に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LengthCaption {
            get {
                return ResourceManager.GetString("LengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   List file (*.lst)|*.lst;|All Files (*.*)|*.* に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ListFilters {
            get {
                return ResourceManager.GetString("ListFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The LoopEnd value is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopEndErrorCaption {
            get {
                return ResourceManager.GetString("LoopEndErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop information has already been set for this file.
        ///If you continue, the loop information you have set will be lost.
        ///Do you want to continue? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopingAlreadySetWarningCaption {
            get {
                return ResourceManager.GetString("LoopingAlreadySetWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The list file used for the loop has not been specified. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopListErrorCaption {
            get {
                return ResourceManager.GetString("LoopListErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   LoopStart or LoopEnd value is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopNotSetCaption {
            get {
                return ResourceManager.GetString("LoopNotSetCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The LoopStart value is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopStartErrorCaption {
            get {
                return ResourceManager.GetString("LoopStartErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The LoopTimes value is not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopTimesErrorCaption {
            get {
                return ResourceManager.GetString("LoopTimesErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop playback is enabled.
        ///If you continue without setting the loop start and end points, the current loop information will be lost.
        ///Do you want to continue? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoopWarningCaption {
            get {
                return ResourceManager.GetString("LoopWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The “Create loop points during conversion” option is enabled, so settings cannot be configured here. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LPCreateAlreadyEnableWarning {
            get {
                return ResourceManager.GetString("LPCreateAlreadyEnableWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loop is enabled on the main screen, so this option cannot be activated. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MainLoopingAlreadyEnabledWarnig {
            get {
                return ResourceManager.GetString("MainLoopingAlreadyEnabledWarnig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Abort に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MSGBoxAbortedCaption {
            get {
                return ResourceManager.GetString("MSGBoxAbortedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Confirm に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MSGBoxConfirmCaption {
            get {
                return ResourceManager.GetString("MSGBoxConfirmCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MSGBoxErrorCaption {
            get {
                return ResourceManager.GetString("MSGBoxErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Done に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MSGBoxSuccessCaption {
            get {
                return ResourceManager.GetString("MSGBoxSuccessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Warning に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MSGBoxWarningCaption {
            get {
                return ResourceManager.GetString("MSGBoxWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Multiple sound source files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultipleFilesCaption {
            get {
                return ResourceManager.GetString("MultipleFilesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The &apos;set loop point&apos; option does not work with multiple files!
        ///When converting multiple files, run the conversion with the &apos;Create loop points on conversion&apos; checked and adjust the settings so that each file loops correctly on the screen that appears. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MultipleLoopPointErrorCaption {
            get {
                return ResourceManager.GetString("MultipleLoopPointErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Since you are not connected to the Internet, you will not be able to check for updates. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NetworkNotConnectedCaption {
            get {
                return ResourceManager.GetString("NetworkNotConnectedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Unsupported files cannot be loaded. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotAllowedExtensionCaption {
            get {
                return ResourceManager.GetString("NotAllowedExtensionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It is not possible to delete the &apos;$InFile&apos; and &apos;$OutFile&apos; strings. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotFoundIOStringCaption {
            get {
                return ResourceManager.GetString("NotFoundIOStringCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not Ready - Please open the file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotReadyCaption {
            get {
                return ResourceManager.GetString("NotReadyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a sound source file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenDialogTitle {
            get {
                return ResourceManager.GetString("OpenDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Drag and drop a file here or open the file... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenFileCaption {
            get {
                return ResourceManager.GetString("OpenFileCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open a looplist file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string OpenListDialogTitle {
            get {
                return ResourceManager.GetString("OpenListDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pause に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PauseCaption {
            get {
                return ResourceManager.GetString("PauseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PlayCaption {
            get {
                return ResourceManager.GetString("PlayCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The settings on this screen are for confirmation only and will not be reflected in the actual output.
        ///To output ATRAC with loops applied, whether for a single file or multiple files, turn off the ‘Loop from start to end of source’ and ‘Set loop points’ settings, and configure the loop directly on this UI.
        ///Alternatively, check ‘Create loop points during conversion’, execute the conversion, and then adjust the settings on the displayed screen to ensure each file loops correctly.
        ///While it is possible to enable [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string PreviewWarningCaption {
            get {
                return ResourceManager.GetString("PreviewWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Processing... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ProcessingCaption {
            get {
                return ResourceManager.GetString("ProcessingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All Ready! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ReadyCaption {
            get {
                return ResourceManager.GetString("ReadyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Samples に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SampleCaption {
            get {
                return ResourceManager.GetString("SampleCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save a sound source file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SaveDialogTitle {
            get {
                return ResourceManager.GetString("SaveDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The conversion settings are not properly configured.
        ///Please make appropriate settings from the menu &apos;Conversion Settings&apos;. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingsErrorCaption {
            get {
                return ResourceManager.GetString("SettingsErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The application can be updated.
        ///Do you want to open the GitHub? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SiteOpenCaption {
            get {
                return ResourceManager.GetString("SiteOpenCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Path not specified. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SpecificPathErrorCaption {
            get {
                return ResourceManager.GetString("SpecificPathErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   suffix is not specified. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SpecificSubfolderErrorCaption {
            get {
                return ResourceManager.GetString("SpecificSubfolderErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Getting application configuration information... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SplashFormConfigCaption {
            get {
                return ResourceManager.GetString("SplashFormConfigCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loaded: &apos;{0}&apos; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SplashFormFileCaption {
            get {
                return ResourceManager.GetString("SplashFormFileCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Checking for updates... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SplashFormUpdateCaption {
            get {
                return ResourceManager.GetString("SplashFormUpdateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Update completed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SplashFormUpdatedCaption {
            get {
                return ResourceManager.GetString("SplashFormUpdatedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Updating... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SplashFormUpdatingCaption {
            get {
                return ResourceManager.GetString("SplashFormUpdatingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The path to the splash screen image is not specified. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SplashPathErrorCaption {
            get {
                return ResourceManager.GetString("SplashPathErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Converting {0} of {1} files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StatusCaption {
            get {
                return ResourceManager.GetString("StatusCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StopCaption {
            get {
                return ResourceManager.GetString("StopCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An un expected error occured.
        ///
        ///{0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UnExpectedCaption {
            get {
                return ResourceManager.GetString("UnExpectedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Updated. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UpdateCompletedCaption {
            get {
                return ResourceManager.GetString("UpdateCompletedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The application can be updated.
        ///Do you want to download? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UpdateConfirmCaption {
            get {
                return ResourceManager.GetString("UpdateConfirmCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You are using the latest version of the application. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UptodateCaption {
            get {
                return ResourceManager.GetString("UptodateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Adaptive TRansform Acoustic Coding 3 / 3+ (*.oma)|*.oma;|Adaptive TRansform Acoustic Coding 3 / 3+ (*.omg)|*.omg;|Adaptive TRansform Acoustic Coding 3 / 3+ Advanced Lossless (*.oma)|*.oma;|ATRAC3 / 3+ Video Clip (*.kdr)|*.kdr; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WalkmanFilter {
            get {
                return ResourceManager.GetString("WalkmanFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RIFF waveform Audio Format (Converted) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WAVEConvertedFormatCaption {
            get {
                return ResourceManager.GetString("WAVEConvertedFormatCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RIFF waveform Audio Format (*.wav)|*.wav; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WAVEFilter {
            get {
                return ResourceManager.GetString("WAVEFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   RIFF waveform Audio Format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string WAVEFormatCaption {
            get {
                return ResourceManager.GetString("WAVEFormatCaption", resourceCulture);
            }
        }
    }
}
